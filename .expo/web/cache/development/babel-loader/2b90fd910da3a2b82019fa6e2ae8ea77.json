{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { logToConsole } from 'react-native/Libraries/Utilities/RCTLog';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageCurrent = _useState6[0],\n      setPageCurrent = _useState6[1];\n\n  var getPokemon = function getPokemon() {\n    var response, json;\n    return _regeneratorRuntime.async(function getPokemon$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://pokeapi.co/api/v2/pokemon?limit=10&offset=\" + (pageCurrent - 1) * 10));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.results);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getPokemon();\n  }, [pageCurrent]);\n\n  var ListHeader = function ListHeader() {\n    return _jsxs(View, {\n      style: styles.headerStyle,\n      children: [_jsx(View, {}), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handlePreviousPage();\n        },\n        children: _jsx(Image, {\n          source: require(\"./assets/left-arrow.png\"),\n          style: {\n            width: 14,\n            height: 25,\n            marginTop: 2\n          }\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleNextPage();\n        },\n        children: _jsx(Image, {\n          source: require(\"./assets/right-arrow.png\"),\n          style: {\n            width: 14,\n            height: 25\n          }\n        })\n      }), _jsxs(Text, {\n        style: {},\n        children: [pageCurrent, \" of 137\"]\n      })]\n    });\n  };\n\n  var handlePreviousPage = function handlePreviousPage() {\n    setPageCurrent(pageCurrent - 1 < 1 ? 1 : pageCurrent - 1);\n  };\n\n  var handleNextPage = function handleNextPage() {\n    setPageCurrent(pageCurrent + 1);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return console.log(\"Clicked the button\");\n      },\n      children: _jsx(Image, {\n        source: require(\"./assets/pokemon-logo.png\")\n      })\n    }), _jsxs(Text, {\n      children: ['\\n', '\\n', \"See if you can catch 'em all!\", '\\n', '\\n']\n    }), isLoading ? _jsx(ActivityIndicator, {}) : _jsx(FlatList, {\n      data: data,\n      ListHeaderComponent: ListHeader,\n      keyExtractor: function keyExtractor(_ref, index) {\n        var id = _ref.id;\n        return index;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return console.log(\"What da dog doin\");\n          },\n          children: _jsxs(Text, {\n            children: [item.name, '\\n', item.url, '\\n']\n          })\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0\n  },\n  headerStyle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Kevin/Coding/Pokemon/App.js"],"names":["React","useEffect","useState","logToConsole","App","isLoading","setLoading","data","setData","pageCurrent","setPageCurrent","getPokemon","fetch","response","json","results","console","error","ListHeader","styles","headerStyle","handlePreviousPage","require","width","height","marginTop","handleNextPage","container","log","index","id","item","name","url","StyleSheet","create","flex","backgroundColor","alignItems","paddingTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import { StatusBar } from 'expo-status-bar';\nimport { ActivityIndicator, FlatList, StyleSheet, StatusBar, Text, Platform, View, Image, TouchableOpacity, SafeAreaView } from 'react-native';\nimport { logToConsole } from 'react-native/Libraries/Utilities/RCTLog';\n\nexport default function App() {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [ pageCurrent, setPageCurrent ] = useState(1);\n\n  const getPokemon = async () => {\n    try {\n     const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=10&offset=${(pageCurrent - 1) * 10}`);\n     const json = await response.json();\n     setData(json.results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getPokemon();\n  }, [pageCurrent]);\n\n  const ListHeader = () => {\n    //View to set in Header\n        return (\n            \n            <View style={styles.headerStyle}>\n            <View></View>\n            <TouchableOpacity onPress={() => handlePreviousPage()}>\n                <Image source={require('./assets/left-arrow.png')} style={{width: 14, height: 25, marginTop: 2}}/>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => handleNextPage()}>\n            <Image source={require('./assets/right-arrow.png')} style={{width: 14, height: 25}}/>\n            </TouchableOpacity>\n            <Text style={{}}>{pageCurrent} of 137</Text>\n            </View>\n        );\n    };\n\n  const handlePreviousPage = () => {\n      // Do this so your page can't go negative\n      setPageCurrent(pageCurrent - 1<1?1:pageCurrent - 1);\n  }\n\n  const handleNextPage = () => {\n      setPageCurrent(pageCurrent + 1); \n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TouchableOpacity onPress={() => console.log(\"Clicked the button\")}>\n        <Image source={require('./assets/pokemon-logo.png')} />\n      </TouchableOpacity>\n      <Text>{'\\n'}{'\\n'}See if you can catch 'em all!{'\\n'}{'\\n'}</Text>\n      { isLoading ? <ActivityIndicator/> : (\n        <FlatList \n          data={data}\n          ListHeaderComponent={ListHeader}\n          keyExtractor={({ id }, index) => index}\n          renderItem={({ item }) => (\n            <TouchableOpacity onPress={() => console.log(\"What da dog doin\")}>\n              <Text>{item.name}{'\\n'}{item.url}{'\\n'}</Text>\n            </TouchableOpacity>\n          )}\n        />\n      )}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0\n  },\n  headerStyle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  }\n});"]},"metadata":{},"sourceType":"module"}